{"version":3,"sources":["webpack:///./src/templates/Fact.js"],"names":["Page","props","data","pageContext","allFactSlugs","nextSlug","previousSlug","page","htmlAst","fields","image","number","fact","title","source","sourceUrl","content","markdown","twoDigitNumber","toString","length","css","href","as","external","randomSlug","Math","floor","random","pageQuery"],"mappings":"qqBAWaA,EAAO,SAACC,GAAW,IACtBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACNC,EAAyCD,EAAzCC,aAAcC,EAA2BF,EAA3BE,SAAUC,EAAiBH,EAAjBG,aAExBC,EAASL,EAATK,KACAC,EAAYD,EAAZC,QALqB,EAM6BD,EAAKE,OAAvDC,EANqB,EAMrBA,MAAaC,EANQ,EAMdC,KAAcC,EANA,EAMAA,MAAOC,EANP,EAMOA,OAAQC,EANf,EAMeA,UAEtCC,EAAUC,YAAST,GAKnBU,EAAiBP,EAAOQ,WAAWC,OAAS,EAAI,IAAMT,EAASA,EAErE,OACE,cAAC,IAAD,KACE,cAAC,IAAD,KACE,2BAAQE,IAGV,cAAC,IAAD,CAAaH,MAAOA,GAClB,cAAC,UAAD,CACEW,IAAG,GAIFV,GACC,sBACEU,IAAG,GAkBFH,GAGL,sBACEG,IAAG,GAIFR,IAGJG,EAEAD,GACC,cAAC,YAAD,CACEM,IAAG,GAIH,cAAC,OAAD,CAAMC,KAAMP,EAAWQ,GAAG,IAAIC,UAAQ,GAAtC,WACWV,KAMjB,cAAC,IAAD,CACET,SAAUA,EACVC,aAAcA,EACdmB,WAjEGrB,EAAasB,KAAKC,MAAMD,KAAKE,SAAWxB,EAAagB,aAuEnDS,EAAS,aAkBP7B","file":"component---src-templates-fact-js-92f8230b8abcac4b34db.js","sourcesContent":["import { css } from '@emotion/core';\nimport { Heading, Link, Paragraph } from '@octopusthink/nautilus';\nimport { graphql } from 'gatsby';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nimport Navigation from 'components/Navigation';\nimport PageWrapper from 'components/PageWrapper';\nimport App from 'templates/App';\nimport { markdown } from 'utils/markdown';\n\nexport const Page = (props) => {\n  const { data, pageContext } = props;\n  const { allFactSlugs, nextSlug, previousSlug } = pageContext;\n\n  const { page } = data;\n  const { htmlAst } = page;\n  const { image, fact: number, title, source, sourceUrl } = page.fields;\n\n  const content = markdown(htmlAst);\n\n  const randomSlug = () => {\n    return allFactSlugs[Math.floor(Math.random() * allFactSlugs.length)];\n  };\n  const twoDigitNumber = number.toString().length < 2 ? '0' + number : number;\n\n  return (\n    <App>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n\n      <PageWrapper image={image}>\n        <Heading\n          css={css`\n            position: relative;\n          `}\n        >\n          {number && (\n            <span\n              css={css`\n                position: absolute;\n                top: -12rem;\n                left: -8rem;\n                font-size: 23rem;\n                letter-spacing: -0.02em;\n                opacity: 0.15;\n                color: #fefefe;\n                text-shadow:-4px -4px 0 #666,\n                -4px 4px 0 #666,4px -4px 0 #666,\n                4px 4px 0 #666; }\n\n                @media screen and (min-width: 640px) {\n                  top: -10rem;\n                  left: -18rem;\n                }\n              `}\n            >\n              {twoDigitNumber}\n            </span>\n          )}\n          <span\n            css={css`\n              position: relative;\n            `}\n          >\n            {title}\n          </span>\n        </Heading>\n        {content}\n\n        {sourceUrl && (\n          <Paragraph\n            css={css`\n              font-style: italic;\n            `}\n          >\n            <Link href={sourceUrl} as=\"a\" external>\n              Source: {source}\n            </Link>\n          </Paragraph>\n        )}\n      </PageWrapper>\n\n      <Navigation\n        nextSlug={nextSlug}\n        previousSlug={previousSlug}\n        randomSlug={randomSlug()}\n      />\n    </App>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    page: markdownRemark(id: { eq: $id }) {\n      fields {\n        image\n        fact\n        slug\n        sourceUrl\n        source\n        title\n      }\n      htmlAst\n      rawMarkdownBody\n      id\n    }\n  }\n`;\n\nexport default Page;\n"],"sourceRoot":""}